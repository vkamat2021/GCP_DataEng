##Activate Google Cloud Shell
'''
gcloud auth list
gcloud config list project
'''
##Preparing your environment
'''
###Create environment variables
export PROJECT_ID=$(gcloud info --format='value(config.project)')
export BUCKET=${PROJECT_ID}-ml
'''
'''
###create a Cloud SQL instance
gcloud sql instances create taxi \
    --tier=db-n1-standard-1 --activation-policy=ALWAYS
'''
'''
###Set a root password for the Cloud SQL instance
gcloud sql users set-password root --host % --instance taxi \
 --password Passw0rd
 '''
 '''
 ###create an environment variable with the IP address 
 export ADDRESS=$(wget -qO - http://ipecho.net/plain)/32
 ###Whitelist the Cloud Shell instance for management access t
 gcloud sql instances patch taxi --authorized-networks $ADDRESS
 ###Get the IP address of your Cloud SQL
 MYSQLIP=$(gcloud sql instances describe \
taxi --format="value(ipAddresses.ipAddress)")
###echo $MYSQLIP
echo $MYSQLIP
'''
'''
##Create the taxi trips table
mysql --host=$MYSQLIP --user=root \
      --password --verbose
create database if not exists bts;
use bts;
drop table if exists trips;
create table trips (
  vendor_id VARCHAR(16),		
  pickup_datetime DATETIME,
  dropoff_datetime DATETIME,
  passenger_count INT,
  trip_distance FLOAT,
  rate_code VARCHAR(16),
  store_and_fwd_flag VARCHAR(16),
  payment_type VARCHAR(16),
  fare_amount FLOAT,
  extra FLOAT,
  mta_tax FLOAT,
  tip_amount FLOAT,
  tolls_amount FLOAT,
  imp_surcharge FLOAT,
  total_amount FLOAT,
  '''
  '''
  '''
  describe trips;
  '''
  '''
  select distinct(pickup_location_id) from trips;
  '''
  exit
  '''
  ##Add data to Cloud SQL instance
  '''
  ##copy files from cloud storage
  gcloud storage cp gs://cloud-training/OCBL013/nyc_tlc_yellow_trips_2018_subset_1.csv trips.csv-1
  gcloud storage cp gs://cloud-training/OCBL013/nyc_tlc_yellow_trips_2018_subset_2.csv trips.csv-2
  mysql --host=$MYSQLIP --user=root  --password  --local-infile
  '''
  '''
  ##load files into db
  '''
  '''
  mysql --host=$MYSQLIP --user=root  --password  --local-infile
  '''
  use bts;
  '''
  LOAD DATA LOCAL INFILE 'trips.csv-1' INTO TABLE trips
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
IGNORE 1 LINES
(vendor_id,pickup_datetime,dropoff_datetime,passenger_count,trip_distance,rate_code,store_and_fwd_flag,payment_type,fare_amount,extra,mta_tax,tip_amount,tolls_amount,imp_surcharge,total_amount,pickup_location_id,dropoff_location_id);
'''
  LOAD DATA LOCAL INFILE 'trips.csv-2' INTO TABLE trips
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
IGNORE 1 LINES
(vendor_id,pickup_datetime,dropoff_datetime,passenger_count,trip_distance,rate_code,store_and_fwd_flag,payment_type,fare_amount,extra,mta_tax,tip_amount,tolls_amount,imp_surcharge,total_amount,pickup_location_id,dropoff_location_id);
'''
##Checking for data integrity
'''
###Query the trips table for unique pickup location regions
select distinct(pickup_location_id) from trips;
'''
select
  max(trip_distance),
  min(trip_distance)
from
  trips;
  '''
  ###How many trips in the dataset have a trip distance of 0
  select count(*) from trips where trip_distance = 0;
  '''
  ###check if fare qamount is negative
  select count(*) from trips where fare_amount < 0;
  '''
  ###investigate the payment_type
  select
  payment_type,
  count(*)
from
  trips
group by
  payment_type;
  '''
  exit
  '''
  ##End

  
